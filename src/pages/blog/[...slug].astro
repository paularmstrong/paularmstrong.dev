---
import Base from '~/layouts/Base.astro';
import PageInfo from '~/components/PageInfo.astro';
import Prose from '~/components/Prose.astro';

export async function getStaticPaths() {
	const posts = (await Astro.glob('../../../blog/*.{md,mdx}'))
		.map((post) => {
			const filename = post.file.split('/blog/')[1].replace(/\.mdx?$/, '');
			const match = filename.match(/^(?<year>\d{4})-(?<month>\d{2})-(?<day>\d{2})-(?<slug>.+)/);
			if (!match) {
				return false;
			}
			return { params: { slug: Object.values(match.groups).join('/') }, props: { post } };
		})
		.filter(Boolean);

	for (let i = 0; i < posts.length; i++) {
		const prev = posts[i - 1];
		const next = posts[i + 1];
		posts[i].props.siblings = {
			prev: prev ? { ...prev.props.post.frontmatter, slug: prev.params.slug } : undefined,
			next: next ? { ...next.props.post.frontmatter, slug: next.params.slug } : undefined,
		};
	}

	return posts;
}

const {
	frontmatter: { title, pubDate, updatedDate, readingTime, description, file },
	Content,
} = Astro.props.post;
const { siblings } = Astro.props;
---

<Base title={title} description={description}>
	<article>
		<Prose>
			<h1>{title}</h1>

			<PageInfo file={file} pubDate={pubDate} updatedDate={updatedDate} readingTime={readingTime} />

			<Content />
		</Prose>
	</article>

	<aside class="mt-10">
		<Prose><h2 id="post-nav" class="!text-lg">Post navigation</h2></Prose>
		<nav aria-labelledby="post-nav">
			<ul class="grid w-full grid-flow-col grid-cols-2 justify-between gap-12 overflow-hidden">
				{
					siblings.prev ? (
						<li class="flex flex-row justify-start">
							<a
								href={`/blog/${siblings.prev.slug}`}
								class="inline-flex flex-row items-center gap-2 rounded p-4 text-blue-600 hover:bg-blue-400/20 hover:text-blue-800 dark:border-slate-600 dark:text-blue-100 dark:hover:bg-blue-50/20"
							>
								<svg
									xmlns="http://www.w3.org/2000/svg"
									fill="none"
									viewBox="0 0 24 24"
									stroke="currentColor"
									class="h-6 w-6 shrink-0"
								>
									<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
								</svg>
								<span>{siblings.prev.title}</span>
							</a>
						</li>
					) : null
				}
				{
					siblings.next ? (
						<li class="flex flex-row justify-end">
							<a
								href={`/blog/${siblings.next.slug}`}
								class="inline-flex flex-row-reverse items-center gap-2 rounded p-4 text-blue-600 hover:bg-blue-400/20 hover:text-blue-800 dark:border-slate-600 dark:text-blue-100 dark:hover:bg-blue-50/20"
							>
								<svg
									xmlns="http://www.w3.org/2000/svg"
									fill="none"
									viewBox="0 0 24 24"
									stroke="currentColor"
									class="h-6 w-6 shrink-0"
								>
									<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
								</svg>
								<span class="text-right">{siblings.next.title}</span>
							</a>
						</li>
					) : null
				}
			</ul>
		</nav>
	</aside>
</Base>
