---
import type { GetStaticPathsOptions } from 'astro';
import { getCollection } from 'astro:content';
import Link from '~/components/Link.astro';
import Picture from '~/components/Picture.astro';
import AuthorMeta from '~/components/AuthorMeta.astro';
import Base from '~/layouts/Base.astro';
import Prose from '~/components/Prose.astro';
import Pagination from '~/components/Pagination.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const posts = (
		await getCollection('blog', ({ data }) => {
			return import.meta.env.DEV || !data.draft;
		})
	).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

	return paginate(posts, {
		pageSize: 10,
	});
}

const { page } = Astro.props;
const dateFormatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'medium' }).format;
---

<Base title="Blog">
	<Prose>
		<h1>Blog</h1>
		<p>
			Rambling, ranting, and ravingâ€¦ But mostly just whatever seems important in the moment about JavaScript, frontend
			development, and life surrounding me.
		</p>
	</Prose>
	<section>
		<AuthorMeta id="author" />
		<ul class="flex flex-col gap-12">
			{
				// @ts-ignore very not good. any bad.
				page.data.map((post: any) => {
					const { draft, pubDate, title, description, heroImage } = post.data;
					if (import.meta.env.PROD && draft) {
						return null;
					}

					// const filename = post.file?.split('/blog/')[1]?.replace(/\.mdx?$/, '') || '';
					const match = post.slug?.match(/^(?<year>\d+)-(?<month>\d+)-(?<day>\d+)-(?<slug>.+)$/);

					if (!match) {
						return null;
					}
					const slug = `/blog/${Object.values(match.groups || {}).join('/')}/`;
					const date = dateFormatter(new Date(pubDate));

					return (
						<li
							class="mb-4 grid grid-cols-6 gap-4"
							itemscope
							itemprop="blogPost"
							itemtype="http://schema.org/Article"
							itemref="author"
						>
							<time
								class="text-right leading-8 text-slate-600 dark:text-slate-300"
								datetime={date}
								itemprop="datePublished"
							>
								{date}
							</time>
							<div class="col-span-5">
								<h2>
									<Link class="text-2xl text-purple-600 dark:text-purple-400" href={slug} itemprop="url">
										<span
											class="bg-gradient-to-br from-blue-700 to-purple-600 bg-clip-text font-bold text-transparent dark:from-blue-400 dark:to-purple-400"
											itemprop="name headline"
										>
											{title}
										</span>
										{draft ? <sup class="text-sm text-red-400">(draft)</sup> : null}
										{heroImage ? (
											<div class="my-2">
												<Prose>
													<Picture
														src={heroImage.src}
														alt=""
														widths={[480, 640]}
														width={heroImage.width}
														height={heroImage.height}
														itemprop="image"
														class="!mt-0 w-full max-w-none"
													/>
												</Prose>
											</div>
										) : null}
									</Link>
								</h2>
								<Prose>
									<p>{description}</p>
								</Prose>
							</div>
						</li>
					);
				})
			}
		</ul>
	</section>

	<Pagination nextUrl={page.url.next} prevUrl={page.url.prev} current={page.currentPage} total={page.lastPage} />
</Base>
